
* 成员变量和局部变量的区别？
 	a.在类中的位置不同
 		成员变量：在类中方法外
 		局部变量：在方法定义中或者方法声明上
	b.在内存中的位置不同
 		成员变量在堆内存
 		局部变量在栈内存
	c.声明周期不同
 		成员变量 随着对象的创建而存在 随着对象的消失而消失
 		局部变量 随着方法的调用而存在，随着方法的调用完毕而消失
	d.初始化值不同
 		成员变量  有默认初始化值 
 		局部变量 没有默认初始化值，必须定义，赋值，然后才能使用。
 		注意事项：局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则
 		
 		
 		
Student s = new Student();做了哪些事情
a.把Student.class文件加载到内存中
b.在栈内存给s变量开辟一个空间
c.在堆内存为学生对象申请一个空间
d.给成员变量进行默认初始化。null 0
e.给成员变量进行显示初始化
f.通过构造方法给成员变量进行初始化
g.数据初始化完毕，然后把堆内存的地址值赋值给栈内存的s变量


内存图详解：
1.首先在一个java文件中有几个class类就会产生几个class文件内容，文件内容其中包含成员变量和成员方法，该class文件内容存放在方法区
2.main方法会在栈内存中，创建的对象变量也会在栈内容中，new出来的对象会存在堆内存中，此时成员变量有自己的默认值，成员方法会以地址的形式进行存储，并指向方法区，堆内存中会产生一个地址给栈内存
3.当初始化构造方法的时候，会将堆内存中的成员变量赋值
4.当调用方法时，会在栈内存中调用方法，当调用完毕后，会自动从栈内存空间中消失





static的特点（它可以修饰成员变量，还可以修饰成员方法）
a.随着类的加载而加载
b.优先于对象存在
c.被类的所有对象共享
d.可以通过类名调用，其实它本身也可以通过对象名调用，推荐使用类名调用
静态修饰的内容一般我们称其为：与类相关的，类成员


1.打开帮助文档
2.点击显示，找到索引，看到输入
3.知道你要找谁？以Scanner举例
4.在输入框里面输入Scanner，然后回车
5.看包
	java.lang包下的类不需要导入，其他的全部需要导入
	要导入：java.util.Scanner
6.再简单的看看类的解释和说明，别忘了看看该类的版本
7.看类的结构
	成员变量  字段摘要
	构造方法  构造方法摘要
	成员方法 方法摘要
8.学习构造方法
	有构造方法 就要创建对象
	没有构造方法 成员可能都是静态的
9.看成员方法
	a.左边 
		是否静态，如果静态，可以通过类名调用
		返回值类型，人家返回什么，你就用什么接受
	b.右边
		看方法名，方法名称不要写错
		参数列表，人家要什么，你就给什么，人家要几个，你就给几个
		
		
10.如何制作一个说明书呢？
	a.写一个工具类
	b.对这个类加入文档注释
	c.用工具解析文档注释
	d.格式
		javac -d 目录  -author -version 文件名
		elipse里是：project->Generate javadoc  一直next 然后写：-encoding utf-8 -charset utf-8