如果程序只有一条执行路径，那么该程序就是单线程程序。
如果程序有多条执行路径，那么该程序就是多线程程序。
要想了解多线程，必须先了解线程，而要想了解线程，必须先了解进程，因为线程是依赖于进程而存在的。
多线程不是为了提高效率，而是不必等待

什么是进程？
    通过任务管理器我们就看到了进程的存在，而通过观察，我们发现只有运行的程序才会出现进程。
    进程：就是正在运行的程序。是系统进行资源分配和调用的独立单位。每一个进程都有它自己的内存空间和系统资源。

多进程有什么意义呢？
    单进程的计算机只能做一件事情。而我们现在的计算机都可以做多件事情:一边玩游戏，一边听音乐。
    也就是说现在的计算机都是支持多进程的。就可以在一个时间段内，执行多个任务。
    并且呢，可以提高cpu的使用率。

    问题：一边玩游戏，一边听音乐是同时进行的吗？
    不是，因为单cpu在某一个时间点上只能做一件事情。
    而我们在玩游戏，或者听音乐的时候，是cpu在做着程序间的高效切换，让我们觉得是同时进行的。

什么是线程呢？
    在一个进程内又可以执行多个任务，而这每一个任务我就可以看出是一个线程。
    线程：是程序的执行单元，执行路径。是程序使用cpu的最基本单位。
    单线程：如果程序只有一条执行路径。
    多线程：如果程序有多条执行路径。


多线程有什么意义呢？
    多线程的存在，不是提高程序的执行速度，其实是为了提高应用程序的使用率。
    程序的执行其实都是在抢cpu的资源，cpu的执行权。
    多个进程是在抢这个资源，而其中的某一个进程如果执行路径比较多，就会有更高的几率抢到cpu的执行权。
    我们是不敢保证哪一个线程能够在哪个时刻抢到，所以线程的执行有随机性。

大家注意两个词汇的区别：并行和并发
    前者是裸机上同时发生，指在某一个时间内同时运行多个程序
    后者是物理上同时发生，指在某一个时间点同时运行多个程序

java程序的运行原理：
    由java命令启动jvm，jvm启动就相当于启动了一个进程。
    接着由该进程创建了一个主线程去调用main方法。

jvm虚拟机的启动是单线程的还是多线程的？
    多线程的
    原因是垃圾回收线程也要先启动，否则很容易会出现内存溢出
    现在的垃圾回收线程加上前面的主线程，最低启动了两个线程，所以，jvm的启动其实是多线程的。

需求：我们要实现多线程的程序。
如何实现呢？
    由于线程是依赖于进程而存在的，所以我们应该先创建一个进程出来。
    而进程是由系统创建的，所以我们应该去调用系统功能创建一个进程。
    java是不能直接调用系统功能的，所以，我们没有办法直接实现多线程程序。
    但是呢？java可以去调用c/c++写好的程序来实现多线程程序。
    由c/c++去调用系统功能创建进程，然后由java去调用这样的东西。
    然后提供一些类供我们使用，我们就可以实现多线程程序了。
那么java提供的类是什么呢？
    Thread
    通过查看api，我们知道了有2种方式实现多线程程序。
方式1：集成Thread类
    步骤：
    a.自定义类MyThread继承Thread类
    b.MyThread类里面重写run()
        为什么是run()方法呢？
    c.创建对象
    d.启动线程

面试题：run()和start()的区别？
    run():仅仅是封装被线程执行的代码，直接调用是普通方法
    start():首先启动了线程，然后再由jvm去调用该线程的run()方法

线程默认优先级是5
线程优先级的范围是1-10
线程优先级高仅仅表示线程获取的cpu的时间片的几率高，但是要在次数比较多，或者多次运行的时候才能看到比较明显的效果

线程的生命周期
新建：创建线程对象
就绪：有执行的资格，没有执行权 start()
运行：有执行的资格，有执行权
    阻塞：由于一些操作让线程处于该状态。没有执行资格，没有执行权
    而另一些操作却可以把它给激活，激活后处于就绪状态。
死亡：线程对象变成垃圾，等待被回收


他们的视频 是m3u8的 经过js加密的 需要把他们的加密代码 放在node下 运行 来获取 动态m3u8视频播放地址


